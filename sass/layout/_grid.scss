//These styles are used for Float layouts only!
//Not for Flexbox and CSS Grid! 034 lesson
///////////////////////////////////////////
//////DO NOT CHNGE THE EXISTING CODE HERE! - instead if needed add additional container element to your HTML - 038 lesson;
///////////////////////////////////////////

// //the row:
// .row {
//   max-width: $grid-width; //114rem = 1140px for 62.5%(10px) font-size; current standard; the maximum available width the element will use
//   margin: 0 auto;
//
//   @include clearfix;
//
//   //media query mixin; tablet portrait
//   @include respond(tab-port) {
//       max-width: 50rem;
//       padding: 0 3rem;
//   }
//
//   //target all rows except the last one:
//   &:not(:last-child) {
//       margin-bottom: $gutter-vertical;
//
//       @include respond(tab-port) {
//           margin-bottom: $gutter-vertical-small;
//       }
//   }
//
//   [class^="col-"] {
//       float: left;
//       //target all columns except the last one:
//       &:not(:last-child) {
//           margin-right: $gutter-horizontal;
//
//           @include respond(tab-port) {
//               margin-right: 0;
//               margin-bottom: $gutter-vertical-small;
//           }
//       }
//
//       @include respond(tab-port) {
//           width: 100% !important;
//       }
//   }
//
//   //the columns:
//   .col-1-of-2 {
//       width: calc((100% - #{$gutter-horizontal}) / 2);
//   }
//
//   .col-1-of-3 {
//       width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
//   }
//
//   .col-2-of-3 {
//       width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal});
//   }
//
//   .col-1-of-4 {
//       width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
//   }
//
//   .col-2-of-4 {
//       width: calc( 2 * ((100% - 3 * #{$gutter-horizontal}) / 4) + #{$gutter-horizontal} );
//   }
//
//   .col-3-of-4 {
//       width: calc( 3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal} );
//   }
// }
